.radix-themes {
  /*
   * The spacing factor is used in open-ended spacing and flows into the formula:
   * `f(spacing) = calc(var(--spacing-factor) * var(--scaling) * var(--spacing))`
   *
   * Example:
   * const MyComponent = () => {
   *   const spacing = withSpacing(1.5);
   *   return <h1 style={{ margin: spacing }}>Hello With Margin!</h1>;
   * }
   * <Theme spacing="8" scaling="0.9">
   *   // will result with margin spacing = `${8 * 0.9 * 1.5}px` = '10.8px'
   *   <MyComponent />
   * </Theme>
   *
   * DO NOT SET THIS VALUE IN CSS!
   * The default value here is representative of the default value in Theme
   * Instead set the spacing factor on the itself (eg. <Theme spacing={yourSpacing} />)
   */
  --spacing-factor: 8px;

  /* The following are used in gap calculations */
  --space-1: calc(0.5 * var(--spacing-factor) * var(--scaling));  /* 4px */
  --space-2: calc(1 * var(--spacing-factor) * var(--scaling));    /* 8px */
  --space-3: calc(1.5 * var(--spacing-factor) * var(--scaling));  /* 12px */
  --space-4: calc(2 * var(--spacing-factor) * var(--scaling));    /* 16px */
  --space-5: calc(3 * var(--spacing-factor) * var(--scaling));    /* 24px */
  --space-6: calc(4 * var(--spacing-factor) * var(--scaling));    /* 32px */
  --space-7: calc(5 * var(--spacing-factor) * var(--scaling));    /* 40px */
  --space-8: calc(6 * var(--spacing-factor) * var(--scaling));    /* 48px */
  --space-9: calc(8 * var(--spacing-factor) * var(--scaling));    /* 64px */
}
